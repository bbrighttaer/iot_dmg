#%RAML 1.0
---
title: maapi documentation
baseUri: http:localhost:8080/maapi
version: ma.v3

uses:
    lwm2mTypes: raml/lwm2m_types.yaml
types:
    Resource: !include raml/CDT-commonTypes-v1_6_0.xsd#resource
    PrimitiveContent: !include raml/CDT-commonTypes-v1_6_0.xsd#primitiveContent
    Lwm2mClient: lwm2mTypes.Lwm2mClient
    ObserveResponse: lwm2mTypes.ObserveResponse
traits:
    onem2m_http_request_without_body_headers:
        headers:
            x-m2m-ri:
                description: the request ID
                example: 289f87a6-50ee-4260-a904-07a409e63b4b
            accept:
                examples:
                    xml: application/vnd.onem2m-res+xml
                    json: application/vnd.onem2m-res+json
    onem2m_http_request_with_body_headers:
        headers:
            x-m2m-ri:
                description: the request ID
                example: 289f87a6-50ee-4260-a904-07a409e63b4b
            content-type:
                description: The usual Media type and the resource type argument (ty) indicating the oneM2M resource type
                examples:
                    xml: application/vnd.onem2m-res+xml;ty=12
                    json: application/vnd.onem2m-res+json;ty=12
            accept:
                examples:
                    xml: application/vnd.onem2m-res+xml
                    json: application/vnd.onem2m-res+json
    request_body:
        description: The body of the <<request_type>> request
        body:
            application/json:
                type: Resource
                example: !include raml/command_resource.json
            application/vnd.onem2m-res+json:
                type: Resource
                example: !include raml/command_resource.json
            applicaiton/xml:
                type: Resource
                example: !include raml/command_resource.xml
            applicaiton/vnd.onem2m-res+xml:
                type: Resource
                example: !include raml/command_resource.xml
    partial_request_body:
        description: The body of the partial update request.
        body:
            application/json:
                type: Resource
                example: !include raml/partial_update_body.json
            application/vnd.onem2m-res+json:
                type: Resource
                example: !include raml/partial_update_body.json
            application/xml:
                type: Resource
                example: !include raml/partial_update_body.xml
            application/vnd.onem2m-res+xml:
                type: Resource
                example: !include raml/partial_update_body.xml
    response_201:
        responses:
            201:
                headers: !include raml/http_response_headers.yaml
                body: !include raml/http_response_body_success.yaml
            404:
                headers: !include raml/http_response_headers.yaml
                body: !include raml/http_response_body_error.yaml
    response_200:
        responses:
            200:
                headers: !include raml/http_response_headers.yaml
                body: !include raml/http_response_body_success.yaml
            404:
                headers: !include raml/http_response_headers.yaml
                body: !include raml/http_response_body_error.yaml
resourceTypes:
    crud:
        description: APIs for Create, Retrieve, Update, and Delete - oneM2M CRUD operations
        post:
            is: [
                onem2m_http_request_with_body_headers,
                request_body: {request_type: "create"},
                response_201: {
                       response_success_json_example: !include raml/resource_creation_success.json,
                       response_success_xml_example:  !include raml/resource_creation_success.xml,
                       response_error_json_example: !include raml/resource_creation_error.json,
                       response_error_xml_example: !include raml/resource_creation_error.xml
                    }
                ]
        get:
            is: [
                onem2m_http_request_without_body_headers,
                request_body: {request_type: "retrieve"},
                response_200: {
                       response_success_json_example: !include raml/retrieve_response.json,
                       response_success_xml_example:  !include raml/retrieve_response.xml,
                       response_error_json_example: !include raml/retrieve_response_error.json,
                       response_error_xml_example: !include raml/retrieve_response_error.xml
                    }
                ]
        put:
            is: [
                onem2m_http_request_with_body_headers,
                request_body: {request_type: "update"},
                response_200: {
                       response_success_json_example: !include raml/update_request_success.json,
                       response_success_xml_example:  !include raml/update_request_success.xml,
                       response_error_json_example: !include raml/update_request_error.json,
                       response_error_xml_example: !include raml/update_request_error.xml
                    }
                ]
        delete:
            is: [
                onem2m_http_request_without_body_headers,
                request_body: {request_type: "delete"},
                response_200: {
                       response_success_json_example: !include raml/delete_request_success.json,
                       response_success_xml_example:  !include raml/delete_request_success.xml,
                       response_error_json_example: !include raml/delete_request_error.json,
                       response_error_xml_example: !include raml/delete_request_error.xml
                    }
                ]
    partial_update:
        patch:
            is: [
                onem2m_http_request_with_body_headers,
                request_body: {request_type: "patch"},
                response_200: {
                       response_success_json_example: !include raml/partial_update_body.json,
                       response_success_xml_example:  !include raml/partial_update_body.xml,
                       response_error_json_example: !include raml/update_request_error.json,
                       response_error_xml_example: !include raml/update_request_error.xml
                    }
                ]
        post:
            is: [
                onem2m_http_request_with_body_headers,
                request_body: {request_type: "patch"},
                response_200: {
                       response_success_json_example: !include raml/partial_update_body.json,
                       response_success_xml_example:  !include raml/partial_update_body.xml,
                       response_error_json_example: !include raml/update_request_error.json,
                       response_error_xml_example: !include raml/update_request_error.xml
                    }
                ]
/onem2m:
    /cse:
        /{uri:.+}:
            type: crud
    /res:
        /{uri:.+}:
            type: partial_update

/notification:
    description: |
            The resources that are exposed towards the LwM2M management server.
            The management server uses these APIs to report device registration/de-registrations and observations (notifications)
    /observation:
        post:
            body:
                application/json:
                    type: lwm2mTypes.ObserveResponse
    /device:
        post:
            body:
                application/json:
                    type: lwm2mTypes.Lwm2mClient
        /{endpoint}:
            delete:
                body:
                    application/json:
                        type: lwm2mTypes.Lwm2mClient